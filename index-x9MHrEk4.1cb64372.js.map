{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCwEA,EAAA,MAAA,CAAA,EAAA,oBAAA,IACE,GAtEF,IAAA,EAAA,EAAA,wBACA,EAAA,EAAA,wBAJI,EAAI,OAAO,cAAc,CACzB,EAAI,CAAC,EAAG,EAAG,IAAM,KAAK,EAAI,EAAE,EAAG,EAAG,CAAE,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,SAAU,CAAC,EAAG,MAAO,CAAE,GAAK,CAAC,CAAC,EAAE,CAAG,EACzG,EAAI,CAAC,EAAG,EAAG,IAAM,EAAE,EAAG,AAAY,UAAZ,OAAO,EAAgB,EAAI,GAAK,EAAG,EAG7D,OAAM,EACJ,YAAY,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CACtB,EAAE,IAAI,CAAE,WACR,EAAE,IAAI,CAAE,SACR,EAAE,IAAI,CAAE,cACR,EAAE,IAAI,CAAE,aACR,EAAE,IAAI,CAAE,WACR,EAAE,IAAI,CAAE,cACR,IAAI,CAAC,OAAO,CAAG,EAAG,IAAI,CAAC,KAAK,CAAG,EAAG,IAAI,CAAC,UAAU,CAAG,EAAG,IAAI,CAAC,SAAS,CAAG,EAAG,IAAI,CAAC,OAAO,CAAG,AAAA,CAAA,EAAA,EAAA,EAAC,AAAD,EAAE,GAC5F,IAAM,EAAI,EAAE,UAAU,CACtB,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,CAAC,sCAAsC,EAAE,EAAE,UAAU,CAAC,CACxE,CAAA,IAAI,CAAC,UAAU,CAAG,CACpB,CACA,eAAe,CAAC,CAAE,CAChB,MAAM,AAAI,MAAM,0BAClB,CACA,qBAAsB,CACpB,MAAM,AAAI,MAAM,0BAClB,CACA,eAAgB,CACd,MAAM,AAAI,MAAM,0BAClB,CACA,aAAa,QAAQ,CAAC,CAAE,CAAC,CAAE,CACzB,GAAM,CAAC,EAAG,EAAE,CAAG,MAAM,AAAA,CAAA,EAAA,EAAA,CAAC,AAAD,EAAE,YAAY,CAAC,GAAI,EAAI,CAAC,CAAC,EAAE,CAChD,GAAI,EAAE,OAAO,GAAK,EAChB,MAAM,AAAI,MAAM,CAAC,kBAAkB,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,EAAA,CAAG,EAC3D,OAAO,IAAI,EAAE,EAAG,EAAG,EAAG,EAAE,SAAS,CACnC,CACA,OAAO,eAAe,CAAC,CAAE,CAAC,CAAE,CAC1B,MAAM,AAAI,MAAM,0BAClB,CACA,OAAO,cAAc,CAAC,CAAE,CAAC,CAAE,CACzB,MAAM,AAAI,MAAM,mBAClB,CACA,MAAM,iBAAiB,CAAC,CAAE,CACxB,MAAQ,AAAA,CAAA,MAAM,IAAI,CAAC,aAAa,CAAC,EAAA,EAAI,GAAG,CAAC,AAAC,GAAO,CAAA,CAC/C,MAAO,EAAE,YAAY,CACrB,QAAS,EAAE,cAAc,CACzB,SAAU,EAAE,QAAQ,AACtB,CAAA,EACF,CACA,MAAM,cAAc,CAAC,CAAE,CACrB,IAAM,EAAI,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAE,gBAAiB,CAAE,GAC1E,GAAI,AAAW,qBAAX,EAAE,IAAI,CACR,MAAM,AAAI,MAAM,CAAA,EAAG,EAAE,0BAA0B,CAAC,EAClD,IAAM,EAAI,EAAE,MAAM,CAAC,MAAM,CAAC,AAAC,GAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,oBACjD,GAAI,CAAC,GAAK,AAAa,IAAb,EAAE,MAAM,CAChB,MAAM,AAAI,MAAM,CAAC,8BAA8B,EAAE,EAAA,CAAG,EACtD,OAAO,EAAE,GAAG,CAAC,AAAC,IACZ,IAAM,EAAI,EAAE,IAAI,CAAE,EAAI,IAAI,EAAA,EAAA,CAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAI,MACvE,MAAO,AAAA,CAAA,EAAA,EAAA,EAAC,AAAD,EAAE,aAAc,CACrB,YAAa,EAEb,aAAc,IAAI,CAAC,KAAK,CACxB,eAAgB,EAChB,SAAU,OAAO,EAAE,QAAQ,EAC3B,UAAW,OAAO,EAAE,SAAS,EAC7B,iBAAkB,EAAE,iBAAiB,CACrC,MAAO,OAAO,EAAE,KAAK,EACrB,WAAY,EAAE,CACd,QAAS,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,MAAM,CAAC,EAAE,OAAO,CAC7B,EACF,EACF,CACF,CACA,AAAA,CAAA,EAAA,EAAA,EAAA,AAAA,EAAE,QAAS,eAAgB,E,E,C,uB,Q,uB,Q,iD,O,E,E,E,C,E","sources":["<anon>","node_modules/@xlabs/wormhole-connect/lib/index-x9MHrEk4.mjs"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"by0PN\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"AptosWormholeCore\", ()=>i);\nvar _indexDTF6KsXjMjs = require(\"./index-DTF6KsXj.mjs\");\nvar _aptosBDX0H0BeMjs = require(\"./aptos-BDX0H0Be.mjs\");\nvar d = Object.defineProperty;\nvar h = (a, e, t)=>e in a ? d(a, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : a[e] = t;\nvar o = (a, e, t)=>h(a, typeof e != \"symbol\" ? e + \"\" : e, t);\nclass i {\n    constructor(e, t, r, s){\n        o(this, \"network\");\n        o(this, \"chain\");\n        o(this, \"connection\");\n        o(this, \"contracts\");\n        o(this, \"chainId\");\n        o(this, \"coreBridge\");\n        this.network = e, this.chain = t, this.connection = r, this.contracts = s, this.chainId = (0, _indexDTF6KsXjMjs.b6)(t);\n        const n = s.coreBridge;\n        if (!n) throw new Error(`CoreBridge contract Address for chain ${t} not found`);\n        this.coreBridge = n;\n    }\n    getGuardianSet(e) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getGuardianSetIndex() {\n        throw new Error(\"Method not implemented.\");\n    }\n    getMessageFee() {\n        throw new Error(\"Method not implemented.\");\n    }\n    static async fromRpc(e, t) {\n        const [r, s] = await (0, _aptosBDX0H0BeMjs.A).chainFromRpc(e), n = t[s];\n        if (n.network !== r) throw new Error(`Network mismatch: ${n.network} !== ${r}`);\n        return new i(r, s, e, n.contracts);\n    }\n    async *publishMessage(e, t) {\n        throw new Error(\"Method not implemented.\");\n    }\n    async *verifyMessage(e, t) {\n        throw new Error(\"Not implemented.\");\n    }\n    async parseTransaction(e) {\n        return (await this.parseMessages(e)).map((r)=>({\n                chain: r.emitterChain,\n                emitter: r.emitterAddress,\n                sequence: r.sequence\n            }));\n    }\n    async parseMessages(e) {\n        const t = await this.connection.getTransactionByHash({\n            transactionHash: e\n        });\n        if (t.type !== \"user_transaction\") throw new Error(`${e} is not a user_transaction`);\n        const r = t.events.filter((s)=>s.type.endsWith(\"WormholeMessage\"));\n        if (!r || r.length === 0) throw new Error(`WormholeMessage not found for ${e}`);\n        return r.map((s)=>{\n            const n = s.data, c = new (0, _indexDTF6KsXjMjs.bB)(BigInt(n.sender).toString(16).padStart(64, \"0\"));\n            return (0, _indexDTF6KsXjMjs.cc)(\"Uint8Array\", {\n                guardianSet: 0,\n                // TODO: need to implement guardian set idx\n                emitterChain: this.chain,\n                emitterAddress: c,\n                sequence: BigInt(n.sequence),\n                timestamp: Number(n.timestamp),\n                consistencyLevel: n.consistency_level,\n                nonce: Number(n.nonce),\n                signatures: [],\n                payload: (0, _indexDTF6KsXjMjs.r).decode(n.payload)\n            });\n        });\n    }\n}\n(0, _indexDTF6KsXjMjs.bj)(\"Aptos\", \"WormholeCore\", i);\n\n},{\"./index-DTF6KsXj.mjs\":\"ieLDt\",\"./aptos-BDX0H0Be.mjs\":\"d6zRe\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=index-x9MHrEk4.1cb64372.js.map\n","var d = Object.defineProperty;\nvar h = (a, e, t) => e in a ? d(a, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : a[e] = t;\nvar o = (a, e, t) => h(a, typeof e != \"symbol\" ? e + \"\" : e, t);\nimport { b6 as m, bB as w, cc as g, r as p, bj as u } from \"./index-DTF6KsXj.mjs\";\nimport { A as l } from \"./aptos-BDX0H0Be.mjs\";\nclass i {\n  constructor(e, t, r, s) {\n    o(this, \"network\");\n    o(this, \"chain\");\n    o(this, \"connection\");\n    o(this, \"contracts\");\n    o(this, \"chainId\");\n    o(this, \"coreBridge\");\n    this.network = e, this.chain = t, this.connection = r, this.contracts = s, this.chainId = m(t);\n    const n = s.coreBridge;\n    if (!n)\n      throw new Error(`CoreBridge contract Address for chain ${t} not found`);\n    this.coreBridge = n;\n  }\n  getGuardianSet(e) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getGuardianSetIndex() {\n    throw new Error(\"Method not implemented.\");\n  }\n  getMessageFee() {\n    throw new Error(\"Method not implemented.\");\n  }\n  static async fromRpc(e, t) {\n    const [r, s] = await l.chainFromRpc(e), n = t[s];\n    if (n.network !== r)\n      throw new Error(`Network mismatch: ${n.network} !== ${r}`);\n    return new i(r, s, e, n.contracts);\n  }\n  async *publishMessage(e, t) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async *verifyMessage(e, t) {\n    throw new Error(\"Not implemented.\");\n  }\n  async parseTransaction(e) {\n    return (await this.parseMessages(e)).map((r) => ({\n      chain: r.emitterChain,\n      emitter: r.emitterAddress,\n      sequence: r.sequence\n    }));\n  }\n  async parseMessages(e) {\n    const t = await this.connection.getTransactionByHash({ transactionHash: e });\n    if (t.type !== \"user_transaction\")\n      throw new Error(`${e} is not a user_transaction`);\n    const r = t.events.filter((s) => s.type.endsWith(\"WormholeMessage\"));\n    if (!r || r.length === 0)\n      throw new Error(`WormholeMessage not found for ${e}`);\n    return r.map((s) => {\n      const n = s.data, c = new w(BigInt(n.sender).toString(16).padStart(64, \"0\"));\n      return g(\"Uint8Array\", {\n        guardianSet: 0,\n        // TODO: need to implement guardian set idx\n        emitterChain: this.chain,\n        emitterAddress: c,\n        sequence: BigInt(n.sequence),\n        timestamp: Number(n.timestamp),\n        consistencyLevel: n.consistency_level,\n        nonce: Number(n.nonce),\n        signatures: [],\n        payload: p.decode(n.payload)\n      });\n    });\n  }\n}\nu(\"Aptos\", \"WormholeCore\", i);\nexport {\n  i as AptosWormholeCore\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","_indexDTF6KsXjMjs","_aptosBDX0H0BeMjs","d","h","a","e","t","enumerable","configurable","writable","value","o","constructor","r","s","network","chain","connection","contracts","chainId","b6","n","coreBridge","getGuardianSet","getGuardianSetIndex","getMessageFee","fromRpc","A","chainFromRpc","publishMessage","verifyMessage","parseTransaction","parseMessages","map","emitterChain","emitter","emitterAddress","sequence","getTransactionByHash","transactionHash","type","events","filter","endsWith","data","c","bB","BigInt","sender","toString","padStart","cc","guardianSet","timestamp","Number","consistencyLevel","consistency_level","nonce","signatures","payload","decode","bj"],"version":3,"file":"index-x9MHrEk4.1cb64372.js.map"}