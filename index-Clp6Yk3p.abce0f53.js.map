{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCyEA,EAAA,MAAA,CAAA,EAAA,kBAAA,IACE,GAvEF,IAAA,EAAA,EAAA,wBACA,EAAA,EAAA,sBAJI,EAAI,OAAO,cAAc,CACzB,EAAI,CAAC,EAAG,EAAG,IAAM,KAAK,EAAI,EAAE,EAAG,EAAG,CAAE,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,SAAU,CAAC,EAAG,MAAO,CAAE,GAAK,CAAC,CAAC,EAAE,CAAG,EACzG,EAAI,CAAC,EAAG,EAAG,IAAM,EAAE,EAAG,AAAY,UAAZ,OAAO,EAAgB,EAAI,GAAK,EAAG,EAG7D,OAAM,EACJ,YAAY,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CACtB,EAAE,IAAI,CAAE,WACR,EAAE,IAAI,CAAE,SACR,EAAE,IAAI,CAAE,YACR,EAAE,IAAI,CAAE,aACR,EAAE,IAAI,CAAE,WACR,EAAE,IAAI,CAAE,uBACR,IAAI,CAAC,OAAO,CAAG,EAAG,IAAI,CAAC,KAAK,CAAG,EAAG,IAAI,CAAC,QAAQ,CAAG,EAAG,IAAI,CAAC,SAAS,CAAG,EAAG,IAAI,CAAC,OAAO,CAAG,AAAA,CAAA,EAAA,EAAA,EAAC,AAAD,EAAE,GAC1F,IAAM,EAAI,EAAE,UAAU,CACtB,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,CAAC,sCAAsC,EAAE,EAAE,UAAU,CAAC,CACxE,CAAA,IAAI,CAAC,mBAAmB,CAAG,CAC7B,CACA,eAAe,CAAC,CAAE,CAChB,MAAM,AAAI,MAAM,0BAClB,CACA,eAAgB,CACd,MAAM,AAAI,MAAM,0BAClB,CACA,aAAa,QAAQ,CAAC,CAAE,CAAC,CAAE,CACzB,GAAM,CAAC,EAAG,EAAE,CAAG,MAAM,AAAA,CAAA,EAAA,EAAA,CAAC,AAAD,EAAE,YAAY,CAAC,GAAI,EAAI,CAAC,CAAC,EAAE,CAChD,GAAI,EAAE,OAAO,GAAK,EAChB,MAAM,AAAI,MAAM,CAAC,kBAAkB,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,EAAA,CAAG,EAC3D,OAAO,IAAI,EAAE,EAAG,EAAG,EAAG,EAAE,SAAS,CACnC,CACA,OAAO,cAAc,CAAC,CAAE,CAAC,CAAE,CACzB,MAAM,AAAI,MAAM,0BAClB,CACA,OAAO,eAAe,CAAC,CAAE,CAAC,CAAE,CAC1B,MAAM,AAAI,MAAM,0BAClB,CACA,MAAM,iBAAiB,CAAC,CAAE,CACxB,MAAQ,AAAA,CAAA,MAAM,IAAI,CAAC,aAAa,CAAC,EAAA,EAAI,GAAG,CAAC,AAAC,GAAO,CAAA,CAC/C,QAAS,EAAE,cAAc,CACzB,SAAU,EAAE,QAAQ,CACpB,MAAO,IAAI,CAAC,KAAK,AACnB,CAAA,EACF,CACA,MAAM,qBAAsB,CAC1B,MAAM,AAAI,MAAM,0BAClB,CACA,MAAM,cAAc,CAAC,CAAE,CACrB,IAAI,EACJ,IAAM,EAAK,AAGI,MAHJ,CAAA,EAAI,AAAC,CAAA,MAAM,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CACtD,OAAQ,EACR,QAAS,CAAE,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,CAAE,CAC5D,EAAA,EAAI,MAAK,AAAL,EAAkB,KAAK,EAAI,EAAE,MAAM,CAAC,AAAC,GAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,oBAC/D,GAAI,CAAC,GAAK,AAAY,GAAZ,EAAE,MAAM,CAChB,MAAM,AAAI,MAAM,6BAClB,OAAO,EAAE,GAAG,CAAC,AAAC,IACZ,IAAM,EAAI,EAAE,UAAU,CACtB,MAAO,AAAA,CAAA,EAAA,EAAA,EAAC,AAAD,EAAE,aAAc,CACrB,aAAc,IAAI,CAAC,KAAK,CACxB,eAAgB,GAAI,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,EAAE,MAAM,EAAE,kBAAkB,GAClD,SAAU,OAAO,EAAE,QAAQ,EAC3B,YAAa,EAEb,UAAW,OAAO,EAAE,SAAS,EAC7B,iBAAkB,EAAE,iBAAiB,CACrC,MAAO,EAAE,KAAK,CACd,WAAY,EAAE,CACd,QAAS,IAAI,WAAW,EAAE,OAAO,CACnC,EACF,EACF,CACF,CACA,AAAA,CAAA,EAAA,EAAA,EAAA,AAAA,EAAE,MAAO,eAAgB,E,E,C,uB,Q,qB,Q,iD,O,E,E,E,C,E","sources":["<anon>","node_modules/@xlabs/wormhole-connect/lib/index-Clp6Yk3p.mjs"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"iyKkP\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"SuiWormholeCore\", ()=>c);\nvar _indexDTF6KsXjMjs = require(\"./index-DTF6KsXj.mjs\");\nvar _suiDhwkelcgMjs = require(\"./sui-Dhwkelcg.mjs\");\nvar d = Object.defineProperty;\nvar h = (i, e, r)=>e in i ? d(i, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : i[e] = r;\nvar o = (i, e, r)=>h(i, typeof e != \"symbol\" ? e + \"\" : e, r);\nclass c {\n    constructor(e, r, t, n){\n        o(this, \"network\");\n        o(this, \"chain\");\n        o(this, \"provider\");\n        o(this, \"contracts\");\n        o(this, \"chainId\");\n        o(this, \"coreBridgePackageId\");\n        this.network = e, this.chain = r, this.provider = t, this.contracts = n, this.chainId = (0, _indexDTF6KsXjMjs.b6)(r);\n        const s = n.coreBridge;\n        if (!s) throw new Error(`CoreBridge contract Address for chain ${r} not found`);\n        this.coreBridgePackageId = s;\n    }\n    getGuardianSet(e) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getMessageFee() {\n        throw new Error(\"Method not implemented.\");\n    }\n    static async fromRpc(e, r) {\n        const [t, n] = await (0, _suiDhwkelcgMjs.S).chainFromRpc(e), s = r[n];\n        if (s.network !== t) throw new Error(`Network mismatch: ${s.network} !== ${t}`);\n        return new c(t, n, e, s.contracts);\n    }\n    async *verifyMessage(e, r) {\n        throw new Error(\"Method not implemented.\");\n    }\n    async *publishMessage(e, r) {\n        throw new Error(\"Method not implemented.\");\n    }\n    async parseTransaction(e) {\n        return (await this.parseMessages(e)).map((t)=>({\n                emitter: t.emitterAddress,\n                sequence: t.sequence,\n                chain: this.chain\n            }));\n    }\n    async getGuardianSetIndex() {\n        throw new Error(\"Method not implemented.\");\n    }\n    async parseMessages(e) {\n        var n;\n        const t = (n = (await this.provider.getTransactionBlock({\n            digest: e,\n            options: {\n                showEvents: !0,\n                showEffects: !0,\n                showInput: !0\n            }\n        })).events) == null ? void 0 : n.filter((s)=>s.type.endsWith(\"WormholeMessage\"));\n        if (!t || t.length == 0) throw new Error(\"WormholeMessage not found\");\n        return t.map((s)=>{\n            const a = s.parsedJson;\n            return (0, _indexDTF6KsXjMjs.cc)(\"Uint8Array\", {\n                emitterChain: this.chain,\n                emitterAddress: new (0, _indexDTF6KsXjMjs.K)(a.sender).toUniversalAddress(),\n                sequence: BigInt(a.sequence),\n                guardianSet: 0,\n                // TODO: need to implement guardian set idx\n                timestamp: Number(a.timestamp),\n                consistencyLevel: a.consistency_level,\n                nonce: a.nonce,\n                signatures: [],\n                payload: new Uint8Array(a.payload)\n            });\n        });\n    }\n}\n(0, _indexDTF6KsXjMjs.bj)(\"Sui\", \"WormholeCore\", c);\n\n},{\"./index-DTF6KsXj.mjs\":\"ieLDt\",\"./sui-Dhwkelcg.mjs\":\"dxzPC\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=index-Clp6Yk3p.abce0f53.js.map\n","var d = Object.defineProperty;\nvar h = (i, e, r) => e in i ? d(i, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : i[e] = r;\nvar o = (i, e, r) => h(i, typeof e != \"symbol\" ? e + \"\" : e, r);\nimport { b6 as m, cc as w, K as g, bj as p } from \"./index-DTF6KsXj.mjs\";\nimport { S as u } from \"./sui-Dhwkelcg.mjs\";\nclass c {\n  constructor(e, r, t, n) {\n    o(this, \"network\");\n    o(this, \"chain\");\n    o(this, \"provider\");\n    o(this, \"contracts\");\n    o(this, \"chainId\");\n    o(this, \"coreBridgePackageId\");\n    this.network = e, this.chain = r, this.provider = t, this.contracts = n, this.chainId = m(r);\n    const s = n.coreBridge;\n    if (!s)\n      throw new Error(`CoreBridge contract Address for chain ${r} not found`);\n    this.coreBridgePackageId = s;\n  }\n  getGuardianSet(e) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getMessageFee() {\n    throw new Error(\"Method not implemented.\");\n  }\n  static async fromRpc(e, r) {\n    const [t, n] = await u.chainFromRpc(e), s = r[n];\n    if (s.network !== t)\n      throw new Error(`Network mismatch: ${s.network} !== ${t}`);\n    return new c(t, n, e, s.contracts);\n  }\n  async *verifyMessage(e, r) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async *publishMessage(e, r) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async parseTransaction(e) {\n    return (await this.parseMessages(e)).map((t) => ({\n      emitter: t.emitterAddress,\n      sequence: t.sequence,\n      chain: this.chain\n    }));\n  }\n  async getGuardianSetIndex() {\n    throw new Error(\"Method not implemented.\");\n  }\n  async parseMessages(e) {\n    var n;\n    const t = (n = (await this.provider.getTransactionBlock({\n      digest: e,\n      options: { showEvents: !0, showEffects: !0, showInput: !0 }\n    })).events) == null ? void 0 : n.filter((s) => s.type.endsWith(\"WormholeMessage\"));\n    if (!t || t.length == 0)\n      throw new Error(\"WormholeMessage not found\");\n    return t.map((s) => {\n      const a = s.parsedJson;\n      return w(\"Uint8Array\", {\n        emitterChain: this.chain,\n        emitterAddress: new g(a.sender).toUniversalAddress(),\n        sequence: BigInt(a.sequence),\n        guardianSet: 0,\n        // TODO: need to implement guardian set idx\n        timestamp: Number(a.timestamp),\n        consistencyLevel: a.consistency_level,\n        nonce: a.nonce,\n        signatures: [],\n        payload: new Uint8Array(a.payload)\n      });\n    });\n  }\n}\np(\"Sui\", \"WormholeCore\", c);\nexport {\n  c as SuiWormholeCore\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","c","_indexDTF6KsXjMjs","_suiDhwkelcgMjs","d","h","e","r","enumerable","configurable","writable","value","o","constructor","t","n","network","chain","provider","contracts","chainId","b6","s","coreBridge","coreBridgePackageId","getGuardianSet","getMessageFee","fromRpc","S","chainFromRpc","verifyMessage","publishMessage","parseTransaction","parseMessages","map","emitter","emitterAddress","sequence","getGuardianSetIndex","getTransactionBlock","digest","options","showEvents","showEffects","showInput","events","filter","type","endsWith","a","parsedJson","cc","emitterChain","K","sender","toUniversalAddress","BigInt","guardianSet","timestamp","Number","consistencyLevel","consistency_level","nonce","signatures","payload","Uint8Array","bj"],"version":3,"file":"index-Clp6Yk3p.abce0f53.js.map"}